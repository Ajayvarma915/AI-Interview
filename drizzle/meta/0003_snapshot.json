{
  "id": "8ae8eb4e-2034-4a81-ad28-743d95aa5ad6",
  "prevId": "12fac452-ee62-4d6f-8bd6-5a8b83a18739",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.ai_interview": {
      "name": "ai_interview",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "ai_interview_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "mockId": {
          "name": "mockId",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "jobPosition": {
          "name": "jobPosition",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "jobDesc": {
          "name": "jobDesc",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "jobExperience": {
          "name": "jobExperience",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "jsonMockResp": {
          "name": "jsonMockResp",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdBy": {
          "name": "createdBy",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_answer": {
      "name": "user_answer",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "user_answer_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        },
        "mockIdRef": {
          "name": "mockIdRef",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "question": {
          "name": "question",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "correctAns": {
          "name": "correctAns",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userAns": {
          "name": "userAns",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "feedback": {
          "name": "feedback",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "userEmail": {
          "name": "userEmail",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}